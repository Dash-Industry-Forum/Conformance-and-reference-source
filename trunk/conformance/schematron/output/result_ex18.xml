<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<svrl:schematron-output xmlns:xs="http://www.w3.org/2001/XMLSchema"
                        xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:schold="http://www.ascc.net/xml/schematron"
                        xmlns:sch="http://www.ascc.net/xml/schematron"
                        xmlns:iso="http://purl.oclc.org/dsdl/schematron"
                        xmlns:dash="urn:mpeg:DASH:schema:MPD:2011"
                        xmlns:xlink="http://www.w3.org/1999/xlink"
                        title="Schema for validating MPDs"
                        schemaVersion="ISO19757-3"><!--   
		   
		   
		 --><svrl:ns-prefix-in-attribute-values uri="urn:mpeg:DASH:schema:MPD:2011" prefix="dash"/>
   <svrl:ns-prefix-in-attribute-values uri="http://www.w3.org/1999/xlink" prefix="xlink"/>
   <svrl:ns-prefix-in-attribute-values uri="http://www.w3.org/2001/XMLSchema-instance" prefix="xsi"/>
   <svrl:active-pattern/>
   <svrl:fired-rule context="dash:MPD"/>
   <svrl:active-pattern/>
   <svrl:fired-rule context="dash:Period"/>
   <svrl:active-pattern/>
   <svrl:fired-rule context="dash:AdaptationSet"/>
   <svrl:failed-assert test="if (not((@mimeType and @mimeType = 'video/mp4' or @mimeType = 'audio/mp4' or @mimeType = 'application/mp4' or @mimeType = 'application/ttml+xml') or (child::dash:Representation/@mimeType and child::dash:Representation/@mimeType = 'video/mp4' or child::dash:Representation/@mimeType = 'audio/mp4' or child::dash:Representation/@mimeType = 'application/mp4' or child::dash:Representation/@mimeType = 'application/ttml+xml') and (ancestor::dash:MPD/@profiles = 'urn:mpeg:dash:profile:isoff-on-demand:2011' or ancestor::dash:MPD/@profiles = 'urn:mpeg:dash:profile:isoff-live:2011' or ancestor::dash:MPD/@profiles = 'urn:mpeg:dash:profile:isoff-main:2011') or ancestor::dash:MPD/@profiles = 'urn:mpeg:dash:profile:full:2011' or ancestor::dash:MPD/@profiles = 'urn:mpeg:dash:profile:mp2t-main:2011' or ancestor::dash:MPD/@profiles = 'urn:mpeg:dash:profile:mp2t-simple:2011' or not(ancestor::dash:MPD/@profiles))) then false() else true()"
                       location="/*[local-name()='MPD' and namespace-uri()='urn:mpeg:DASH:schema:MPD:2011']/*[local-name()='Period' and namespace-uri()='urn:mpeg:DASH:schema:MPD:2011']/*[local-name()='AdaptationSet' and namespace-uri()='urn:mpeg:DASH:schema:MPD:2011']">
      <svrl:text>For On-Demand, main and live profile, the @mimeType shall equal video/mp4,audio/mp4 or application/mp4.</svrl:text>
   </svrl:failed-assert>
   <svrl:active-pattern/>
   <svrl:active-pattern/>
   <svrl:fired-rule context="dash:Representation"/>
   <svrl:failed-assert test="if (not(@mimeType) and not(parent::dash:AdaptationSet/@mimeType)) then false() else true()"
                       location="/*[local-name()='MPD' and namespace-uri()='urn:mpeg:DASH:schema:MPD:2011']/*[local-name()='Period' and namespace-uri()='urn:mpeg:DASH:schema:MPD:2011']/*[local-name()='AdaptationSet' and namespace-uri()='urn:mpeg:DASH:schema:MPD:2011']/*[local-name()='Representation' and namespace-uri()='urn:mpeg:DASH:schema:MPD:2011']">
      <svrl:text>Either the Representation or the containing AdaptationSet shall have the mimeType attribute.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="if (not(@codecs) and not(parent::dash:AdaptationSet/@codecs)) then false() else true()"
                       location="/*[local-name()='MPD' and namespace-uri()='urn:mpeg:DASH:schema:MPD:2011']/*[local-name()='Period' and namespace-uri()='urn:mpeg:DASH:schema:MPD:2011']/*[local-name()='AdaptationSet' and namespace-uri()='urn:mpeg:DASH:schema:MPD:2011']/*[local-name()='Representation' and namespace-uri()='urn:mpeg:DASH:schema:MPD:2011']">
      <svrl:text>Either the Representation or the containing AdaptationSet shall have the codecs attribute.</svrl:text>
   </svrl:failed-assert>
   <svrl:active-pattern/>
   <svrl:active-pattern/>
   <svrl:active-pattern/>
   <svrl:fired-rule context="dash:SegmentList"/>
   <svrl:active-pattern/>
   <svrl:active-pattern/>
   <svrl:active-pattern/>
   <svrl:active-pattern/>
   <svrl:active-pattern/>
   <svrl:active-pattern/>
   <svrl:active-pattern/>
</svrl:schematron-output>